SVN Build
---------
If you get afuse from SVN, run add-cruft.sh to generate various autotool
scripts and config. If your version of the autotools generates files not
listed in the 'svn:ignore' property or the remove-cruft.sh script, and
you have SVN write access please add them.


TODO
----
While afuse is basically usable, there are a huge number of things which need
doing to afuse to make it "good". Here are a list of some of these:

* Support multi-threading - Internatal Data structures need to guarded
  before we allow this.

* Eliminate the proxying - In theory it should be possible for afuse
  to mount filesystems within itself. However this seems to cause a
  really nasty deadlock. It might be possible for this to work using
  multi-threading or rebinding/moving mount points (needs changes to
  fusermount).

* Rather than umounting an FS to ensure directory changes are flushed,
  it should be possible to flush a handle to the parent dir instead.

* More complex automounting schemes
  * Different commands based on regex's of virtual directories.
  * Use a static list of automountable virtual directories.
  * Scriptable multi-level virtual directory hierachy.

* Refactoring
  * Code should be split into multiple files (could be more efficient too).
  * Some internal terminology can be confusing.
  * alloca's should be converted to VLAs as alloca is non-portable.
  * Code should in general be made more portable with the help of the
    autotools.

* More extensive documentation.

* GUI for interactive automounting. For example we could pop up
  an X11 window, or switch to other VTs on a Liunx console. This needs some
  thought to be implemented well, maybe it should be done with plug-ins/ scripts
  on a per FS basis.

* Better debugging output.

* Autotool'ed environemnt needs lots of work.

* Exit on signal often isn't clean (directory should be unmounted)
  (actually this seems to work with FUSE 2.3?)

* Mouting can sometimes happen in silly situations, for example touching
  a file in the afuse root will cause a filesystem of that filename
  to be automounted. This does not seem to be avoidable in earlier
  versions of FUSE (2.3 for example) as getattr is always called on
  the virtual directory on any operation and if this fails the whole
  operation is aborted.  So it is impossible to distinguish a getattr for
  [non]-mounting operations.

Hopefully I'll get to some of these things in my spare time, however
if you're interested in helping jump on the mailing list at the SF page.
